#include <iostream>                   
using namespace std;                  

//Creating class-node

class FamilyList{
    public:
    //Creating class objects
    string name;
    int age;
    //Pointer for next node
    FamilyList*next; 
    //Pointer for previous node
    FamilyList*prev; 

    FamilyList(string name,int age){
        this->name=name;
        this->age=age;
        //Initialising list
        next=NULL; 
        prev=NULL; 
    }
};


//Fxn to add data through the end

void insert_at_end(FamilyList* &head,string name,int age){
    //Creating a node pointer to store address of head
    FamilyList*temp=head;
    //creating a new node to store data
    FamilyList*new_node=new FamilyList(name,age);
    //Inserting node in empty list
    if(temp==NULL){
        head=new_node;
    }
    //Inserting node in non empty list
    else{
        while(temp->next!=NULL){temp=temp->next;}
        temp->next=new_node;
        new_node->prev=temp;
    }
}


//Fxn to add data through the start

void insert_at_head(FamilyList*&head,string name,int age){
    //Creating a Node pointer and storing address of new node in it 
    FamilyList*new_node=new FamilyList(name,age);
    //Inserting new node at head
    new_node->next=head;
    head->prev=new_node;
    head=new_node;
}


//Fxn to dispaly data at the start

void display_start(FamilyList*head){
    FamilyList*temp=head;
    while(temp!=NULL){cout<<"[Name:"<<temp->name<<" Age:"<<temp->age<<"]"<<"<=>";temp=temp->next;}
    cout<<endl;
}


//Fxn to dispaly data at the end

void display_end(FamilyList*head){
    FamilyList*temp=head;
    while(temp->next!=NULL){temp=temp->next;}
    while(temp!=NULL){cout<<"[Name:"<<temp->name<<" Age:"<<temp->age<<"]"<<"<=>";temp=temp->prev;}
    cout<<endl;
}


//Fxn to remove indices(except the last)

void del_members(FamilyList*&head,int i){
    if(i==0){
        FamilyList*temp=head;
        head=temp->next;
        head->prev=NULL;
        delete temp;
    }
    else{
        FamilyList*temp=head;
        for(int j=0;j<i;j++){temp=temp->next;}
        temp->prev->next=temp->next;
        temp->next->prev=temp->prev;
        delete temp;
    }
}


//Fxn to remove last index

void pop(FamilyList*&head){
    FamilyList*temp=head;
    while(temp->next!=NULL){temp=temp->next;}
    temp->prev->next=NULL;
    delete temp;
}


//Driver code

int main(){
    //Initialising an empty linked list
    FamilyList*head=NULL;
    //Taking no of family mem as input
	int family_mem;
	cout<<"No. of members in your family:";
    cin>>family_mem;

    //Inserting data 
	for(int i=1;i<=family_mem;i++){
		string name;
		int age;
		cout<<"Enter Family Member "<<i<<" Name-";
        cin.ignore();getline(cin,name);
		cout<<"Enter Family Member "<<i<<" Age-";
        cin>>age;

        //adding data to list
		insert_at_end(head,name,age);
	}
    cout<<endl;
    cout<<"Doubly Linked list with my family members as elements:"<<endl;
    cout<<endl;
    display_start(head);
}
